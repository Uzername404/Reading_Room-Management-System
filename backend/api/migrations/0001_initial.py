# Generated by Django 5.1.7 on 2025-05-08 02:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('BORROW', 'Borrow Records'), ('RETURN', 'Return Records'), ('OVERDUE', 'Overdue Items')], max_length=10)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('file', models.FileField(blank=True, upload_to='reports/')),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('resource_id', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('resource_type', models.CharField(choices=[('BOOK', 'Book'), ('MAGAZINE', 'Magazine'), ('NEWSPAPER', 'Newspaper'), ('OTHER', 'Other')], max_length=10)),
                ('author', models.CharField(max_length=100)),
                ('publication_year', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('BORROWED', 'Borrowed')], default='AVAILABLE', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=11, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=11)),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Borrow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('borrow_date', models.DateField(auto_now_add=True)),
                ('due_date', models.DateField()),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('RETURNED', 'Returned'), ('OVERDUE', 'Overdue')], default='ACTIVE', max_length=10)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.resource')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.student')),
            ],
        ),
        migrations.CreateModel(
            name='Return',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('return_date', models.DateField(auto_now_add=True)),
                ('condition_notes', models.TextField(blank=True)),
                ('borrow_record', models.ForeignKey(limit_choices_to={'status': 'ACTIVE'}, on_delete=django.db.models.deletion.CASCADE, to='api.borrow')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_level', models.CharField(choices=[('admin', 'Admin'), ('librarian', 'Librarian'), ('student', 'Student')], max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
